Step 1: Insert the Sample Data into the sales Collection

db.sales.insertMany([
  {
    "saleId": 1,
    "product": "Laptop",
    "category": "Electronics",
    "amount": 800,
    "date": "2024-01-10",
    "region": "North"
  },
  {
    "saleId": 2,
    "product": "Mobile",
    "category": "Electronics",
    "amount": 500,
    "date": "2024-02-15",
    "region": "South"
  },
  {
    "saleId": 3,
    "product": "Shoes",
    "category": "Fashion",
    "amount": 200,
    "date": "2024-01-20",
    "region": "North"
  },
  {
    "saleId": 4,
    "product": "TV",
    "category": "Electronics",
    "amount": 1000,
    "date": "2024-03-05",
    "region": "West"
  },
  {
    "saleId": 5,
    "product": "T-shirt",
    "category": "Fashion",
    "amount": 50,
    "date": "2024-02-25",
    "region": "East"
  },
  {
    "saleId": 6,
    "product": "Headphones",
    "category": "Electronics",
    "amount": 150,
    "date": "2024-04-01",
    "region": "South"
  },
  {
    "saleId": 7,
    "product": "Watch",
    "category": "Fashion",
    "amount": 300,
    "date": "2024-03-15",
    "region": "North"
  },
  {
    "saleId": 8,
    "product": "Laptop",
    "category": "Electronics",
    "amount": 850,
    "date": "2024-02-12",
    "region": "West"
  },
  {
    "saleId": 9,
    "product": "Shoes",
    "category": "Fashion",
    "amount": 250,
    "date": "2024-04-18",
    "region": "South"
  }
]);
Step 2: Aggregation Queries
1. Calculate the total sales amount for each product category

db.sales.aggregate([
  {
    $group: {
      _id: "$category",
      totalSales: { $sum: "$amount" }
    }
  }
]);
2. Determine the month-wise total sales amount

db.sales.aggregate([
  {
    $group: {
      _id: { $substr: ["$date", 0, 7] }, // Extract YYYY-MM from date
      totalSales: { $sum: "$amount" }
    }
  }
]);
3. Identify the highest-selling product (by revenue)

db.sales.aggregate([
  {
    $group: {
      _id: "$product",
      totalRevenue: { $sum: "$amount" }
    }
  },
  { $sort: { totalRevenue: -1 } },
  { $limit: 1 }
]);
4. Find the average sale amount across all transactions

db.sales.aggregate([
  {
    $group: {
      _id: null,
      avgSaleAmount: { $avg: "$amount" }
    }
  }
]);
5. Count the number of sales made in each month

db.sales.aggregate([
  {
    $group: {
      _id: { $substr: ["$date", 0, 7] }, // Extract YYYY-MM from date
      salesCount: { $sum: 1 }
    }
  }
]);
6. Determine the total sales per region

db.sales.aggregate([
  {
    $group: {
      _id: "$region",
      totalSales: { $sum: "$amount" }
    }
  }
]);
7. Identify the top 3 highest revenue-generating products

db.sales.aggregate([
  {
    $group: {
      _id: "$product",
      totalRevenue: { $sum: "$amount" }
    }
  },
  { $sort: { totalRevenue: -1 } },
  { $limit: 3 }
]);
8. Find the total number of sales transactions per category

db.sales.aggregate([
  {
    $group: {
      _id: "$category",
      totalTransactions: { $sum: 1 }
    }
  }
]);
9. Determine the average sales amount for each region

db.sales.aggregate([
  {
    $group: {
      _id: "$region",
      avgSaleAmount: { $avg: "$amount" }
    }
  }
]);
10. Find the total sales for Electronics and Fashion categories separately

db.sales.aggregate([
  {
    $match: {
      category: { $in: ["Electronics", "Fashion"] }
    }
  },
  {
    $group: {
      _id: "$category",
      totalSales: { $sum: "$amount" }
    }
  }
]);